service: auth

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  stackName: Authentication
  environment:
    project: gmv
  httpApi:
    authorizers:
      authorizer:
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - 'https://cognito-idp.'
              - '${opt:region, self:provider.region}'
              - '.amazonaws.com/'
              - Ref: UserPool
        audience:
          - Ref: UserPoolClient
functions:
  getUserInfo:
    handler: user.get
    events:
      - httpApi:
          method: GET
          path: /user
          authorizer: authorizer
  createUserInfo:
    handler: user.post
    events:
      - httpApi:
          method: POST
          path: /user
          authorizer: authorizer

resources:
  Resources:
    HttpApi:
      DependsOn: UserPool
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: true
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        MfaConfiguration: OFF
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: true
            RequireUppercase: true
        UserPoolName: ${self:provider.environment.project}-user-pool-${opt:stage, self:provider.stage}
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - aws.cognito.signin.user.admin
          - email
          - openid
        ClientName: ${self:provider.environment.project}-user-pool-client-${opt:stage, self:provider.stage}
        UserPoolId:
          Ref: UserPool
        CallbackURLs:
          - https://localhost:3000
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false
        SupportedIdentityProviders:
          - COGNITO
    UserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        UserPoolId:
          Ref: UserPool
        Domain: ${self:provider.environment.project}-user-pool-domain-${opt:stage, self:provider.stage}
