Description: >
  Codepipeline, Build, and Deployment of Grace Medical Village client

Parameters:
  environment:
    AllowedValues:
      - development
      - production
    Description: Can be used to alter resources depending on environment
    Type: String

  githubBranch:
    AllowedValues:
      - master
      - deploy-dev
      - deploy-prod
    Type: String
    Description: The branch of the repo to continuously deploy.

  githubRepo:
    Default: backend
    Type: String

  githubToken:
    NoEcho: true
    Type: String

  githubUser:
    Default: Grace-Medical-Village
    Type: String

  resourcePrefix:
    Default: api
    Type: String

  s3PipelineBucket:
    AllowedValues:
      - gmvc-backend-cicd-dev
      - gmvc-backend-cicd
    Type: String

  s3SourceBucket:
    AllowedValues:
      - patient-api-development-serverlessdeploymentbucke-zqef1ecxvht8
      - TODO
    Type: String

Resources:
  S3BucketForPipeline:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref s3PipelineBucket
    DeletionPolicy: Retain

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${resourcePrefix}-codepipeline-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${s3PipelineBucket}/*
                  - !Sub arn:aws:s3:::${s3PipelineBucket}
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:ListBucket
              - Resource: '*'
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole

  CodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - S3BucketForPipeline
      - ServerlessCodeBuildRole
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: !Ref environment
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: false
      Name: !Sub ${resourcePrefix}-build
      ServiceRole: ServerlessCodeBuildRole

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref s3PipelineBucket
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref s3PipelineBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref githubUser
                Repo: !Ref githubRepo
                Branch: !Ref githubBranch
                OAuthToken: !Ref githubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuild
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 2
              

  ServerlessCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      RoleName: ServerlessCodeBuildRole

  ServerlessPolicy:
    Type: AWS::IAM::Policy
    DependsOn: ServerlessCodeBuildRole
    Properties:
      PolicyName: ServerlessPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Resource: '*'
            Effect: Allow
            Action:
              - apigateway:*
              - cloudformation:CancelUpdateStack
              - cloudformation:ContinueUpdateRollback
              - cloudformation:CreateChangeSet
              - cloudformation:CreateStack
              - cloudformation:CreateUploadBucket
              - cloudformation:DeleteStack
              - cloudformation:Describe*
              - cloudformation:EstimateTemplateCost
              - cloudformation:ExecuteChangeSet
              - cloudformation:Get*
              - cloudformation:List*
              - cloudformation:UpdateStack
              - cloudformation:UpdateTerminationProtection
              - cloudformation:ValidateTemplate
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - dynamodb:CreateTable
              - dynamodb:DeleteTable
              - dynamodb:DescribeTable
              - dynamodb:DescribeTimeToLive
              - dynamodb:UpdateTimeToLive
              - ec2:AttachInternetGateway
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateInternetGateway
              - ec2:CreateNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:CreateRouteTable
              - ec2:CreateSecurityGroup
              - ec2:CreateSubnet
              - ec2:CreateTags
              - ec2:CreateVpc
              - ec2:DeleteInternetGateway
              - ec2:DeleteNetworkAcl
              - ec2:DeleteNetworkAclEntry
              - ec2:DeleteRouteTable
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSubnet
              - ec2:DeleteVpc
              - ec2:Describe*
              - ec2:DetachInternetGateway
              - ec2:ModifyVpcAttribute
              - events:DeleteRule
              - events:DescribeRule
              - events:ListRuleNamesByTarget
              - events:ListRules
              - events:ListTargetsByRule
              - events:PutRule
              - events:PutTargets
              - events:RemoveTargets
              - iam:AttachRolePolicy
              - iam:CreateRole
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:DetachRolePolicy
              - iam:GetRole
              - iam:PassRole
              - iam:PutRolePolicy
              - iot:CreateTopicRule
              - iot:DeleteTopicRule
              - iot:DisableTopicRule
              - iot:EnableTopicRule
              - iot:ReplaceTopicRule
              - kinesis:CreateStream
              - kinesis:DeleteStream
              - kinesis:DescribeStream
              - lambda:*
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DeleteLogGroup
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:FilterLogEvents
              - logs:GetLogEvents
              - logs:PutLogEvents
              - logs:PutSubscriptionFilter
              - route53:ChangeResourceRecordSets
              - route53:ListHostedZones
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:DeleteBucketPolicy
              - s3:DeleteObject
              - s3:DeleteObjectVersion
              - s3:GetBucketVersioning
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:ListAllMyBuckets
              - s3:ListBucket
              - s3:PutBucketNotification
              - s3:PutBucketPolicy
              - s3:PutBucketTagging
              - s3:PutBucketWebsite
              - s3:PutEncryptionConfiguration
              - s3:PutObject
              - sns:CreateTopic
              - sns:DeleteTopic
              - sns:GetSubscriptionAttributes
              - sns:GetTopicAttributes
              - sns:ListSubscriptions
              - sns:ListSubscriptionsByTopic
              - sns:ListTopics
              - sns:SetSubscriptionAttributes
              - sns:SetTopicAttributes
              - sns:Subscribe
              - sns:Unsubscribe
              - states:CreateStateMachine
              - states:DeleteStateMachine
      Roles:
        - !Ref ServerlessCodeBuildRole
